package lab;
import java.util.Arrays;
public class Confusionmatrix {
	public static void main(String[] args) {
        int[] actual = {1, 0, 0, 1, 0, 1, 0, 0, 1, 1};
        int[] predicted = {1, 0, 0, 1, 0, 0, 1, 0, 1, 1};
       
        int[][] confusionMatrix = calculateConfusionMatrix(actual, predicted);
        int tp = confusionMatrix[1][1];
        int tn = confusionMatrix[0][0];
        int fp = confusionMatrix[0][1];
        int fn = confusionMatrix[1][0];
        double f1Score = calculateF1Score(tp, fp, fn);
        System.out.println("Confusion Matrix:");
        printMatrix(confusionMatrix);
        System.out.println("\nTrue Positive (TP): " + tp);
        System.out.println("True Negative (TN): " + tn);
        System.out.println("False Positive (FP): " + fp);
        System.out.println("False Negative (FN): " + fn);
        System.out.println("F1-score: " + f1Score);
    }
    public static int[][] calculateConfusionMatrix(int[] actual, int[] predicted) {
        int[][] confusionMatrix = new int[2][2]; 
        
        for (int i = 0; i < actual.length; i++) {
            if (actual[i] == 1 && predicted[i] == 1) {
                confusionMatrix[1][1]++; 
            } else if (actual[i] == 0 && predicted[i] == 0) {
                confusionMatrix[0][0]++; 
            } else if (actual[i] == 0 && predicted[i] == 1) {
                confusionMatrix[0][1]++;
            } else if (actual[i] == 1 && predicted[i] == 0) {
                confusionMatrix[1][0]++;
            }
        }
        
        return confusionMatrix;
    }
    public static double calculateF1Score(int tp, int fp, int fn) {
        double precision = (double) tp / (tp + fp);
        double recall = (double) tp / (tp + fn);
        return 2 * (precision * recall) / (precision + recall);
    }
    public static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            System.out.println(Arrays.toString(row));
        }
    }
}
